version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=VendasDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True
    depends_on:
      db:
        condition: service_healthy
      loki:
        condition: service_started
    networks:
      - vendas-network

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
      - TZ=America/Sao_Paulo
      - MSSQL_TCP_PORT=1433
      - MSSQL_AGENT_ENABLED=true
      - MSSQL_COLLATION=SQL_Latin1_General_CP1_CI_AS
    volumes:
      - sqldata:/var/opt/mssql
      - ./API/scripts:/scripts
    networks:
      - vendas-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
      - "3200:3200"
    volumes:
      - lokidata:/loki
    networks:
      - vendas-network

volumes:
  sqldata:
  lokidata:

networks:
  vendas-network:
    driver: bridge 